/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: FASTP {
        ext.args = {[
            params.extra_fastp_args ? params.extra_fastp_args.split("\\s(?=--)") : ''
        ].flatten().unique(false).join(' ').trim() }
    }

    withName: 'SORTMERNA' {
        ext.args   = '--num_alignments 1 -v'
        publishDir = [
            [
                path: { "${params.outdir}/sortmerna" },
                mode: params.publish_dir_mode,
                pattern: "*.log"
            ],
            [
                path: { "${params.outdir}/sortmerna" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz",
                enabled: params.save_non_ribo_reads
            ]
        ]
    }

    withName: 'TRINITY' {
        ext.args = {[
            params.extra_trinity_args ? params.extra_trinity_args.split("\\s(?=--)") : ''
        ].flatten().unique(false).join(' ').trim() }
    }

    withName: BUSCO {
        ext.args = '-m transcriptome'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
